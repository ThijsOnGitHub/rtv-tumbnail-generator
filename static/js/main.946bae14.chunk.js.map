{"version":3,"sources":["logo.svg","TumbnailCanvas.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TumbnailCanvas","mouseDown","inputRef","React","createRef","handleInputChange","bind","imagePaste","draw","scrollHandler","mouseMoveEvent","dowloaden","clearAllInterVals","rtvLogo","Image","src","addEventListener","imageInfo","x","y","width","height","state","title","image","imageShow","mouseX","mouseY","event","target","value","type","checked","name","files","includes","document","querySelector","file","reader","FileReader","changeDrawImage","result","setState","readAsDataURL","this","url","navigator","clipboard","read","clipboardItems","clipboardItem","types","console","log","getType","blob","URL","createObjectURL","alert","error","message","ctx","current","getContext","fillStyle","fillRect","drawImage","path","Path2D","moveTo","lineTo","fill","font","text","fontface","xPosition","yPosition","maxSize","context","fontsize","measureText","fillText","fitTextOnCanvas","extra","deltaY","interval","setInterval","push","plus","buttons","clientX","clientY","canvas","link","createElement","body","appendChild","href","toDataURL","download","click","removeChild","forEach","clearInterval","className","onChange","onClick","style","fontSize","onMouseDown","moveButtonHandler","onMouseUp","scaleButtonHandler","border","onMouseMove","ref","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.946bae14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\n\r\nclass TumbnailCanvas extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.mouseDown=[]\r\n        this.inputRef = React.createRef();\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.imagePaste=this.imagePaste.bind(this)\r\n        this.draw=this.draw.bind(this)\r\n        this.scrollHandler=this.scrollHandler.bind(this)\r\n        this.mouseMoveEvent=this.mouseMoveEvent.bind(this)\r\n        this.dowloaden=this.dowloaden.bind(this)\r\n        this.clearAllInterVals=this.clearAllInterVals.bind(this)\r\n\r\n        this.rtvLogo=new Image()\r\n        this.rtvLogo.src='../../logoRtv.png'\r\n        this.rtvLogo.addEventListener('load',()=>{\r\n            this.draw()\r\n        })\r\n\r\n        this.imageInfo={x:0,y:0,width:1280,height:720}\r\n\r\n        this.state={\r\n            title:\"Verander deze tekst\",\r\n            image:null,\r\n            imageShow:null\r\n        }\r\n\r\n        this.mouseX=null;\r\n        this.mouseY=null\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        var target = event.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n\r\n        if(name===\"imageShow\" &&event.target.files[0].type.includes(\"image\")){\r\n            var preview = document.querySelector('img');\r\n            var file    = document.querySelector('input[type=file]').files[0];\r\n            var reader  = new FileReader();\r\n\r\n            reader.addEventListener(\"load\",  ()=> {\r\n                this.changeDrawImage(reader.result)\r\n                value = reader.result;\r\n                this.setState({\r\n                    [name]: value\r\n                })\r\n            }, false);\r\n\r\n            if (file) {\r\n                reader.readAsDataURL(file);\r\n            }\r\n\r\n        }else{\r\n            this.setState({\r\n                [name]: value\r\n            }, this.draw)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    changeDrawImage(url){\r\n        this.setState({imageShow:url},()=>{\r\n            this.imageShow=new Image()\r\n            this.imageShow.src=this.state.imageShow\r\n            this.imageShow.addEventListener('load',()=>{\r\n                this.imageInfo.width=this.imageShow.width\r\n                this.imageInfo.height=this.imageShow.height\r\n                this.draw()\r\n            })\r\n        })\r\n    }\r\n\r\n    async imagePaste(){\r\n        try {\r\n            const clipboardItems = await navigator.clipboard.read();\r\n            for (const clipboardItem of clipboardItems) {\r\n                try {\r\n                    for (const type of clipboardItem.types) {\r\n                        if(type.includes(\"image\")){\r\n                            console.log(type)\r\n                            const blob = await clipboardItem.getType(type);\r\n                            var url=URL.createObjectURL(blob)\r\n                            this.changeDrawImage(url)\r\n                        }else{\r\n                            alert(\"U heeft geen geldige afbeelding gekopieërd.\")\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e, e.message);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e, e.message);\r\n        }\r\n\r\n    }\r\n\r\n    draw(){\r\n\r\n        function fitTextOnCanvas(text,fontface,xPosition,yPosition,maxSize,context){\r\n\r\n            // start with a large font size\r\n            var fontsize=50;\r\n\r\n            // lower the font size until the text fits the canvas\r\n            do{\r\n                fontsize--;\r\n                context.font=fontsize+\"px \"+fontface;\r\n            }while(context.measureText(text).width>maxSize)\r\n\r\n            // draw the text\r\n            context.fillText(text,xPosition,yPosition);\r\n\r\n\r\n\r\n        }\r\n\r\n        var ctx=this.inputRef.current.getContext('2d')\r\n\r\n        ctx.fillStyle=\"white\"\r\n        ctx.fillRect(0,0,1280,720)\r\n\r\n        if(this.state.imageShow!==null){\r\n            ctx.drawImage(this.imageShow,this.imageInfo.x,this.imageInfo.y,this.imageInfo.width,this.imageInfo.height)\r\n        }\r\n\r\n\r\n        var height=120\r\n        var path=new Path2D()\r\n        ctx.fillStyle=\"white\"\r\n        path.moveTo(1280,0)\r\n        path.lineTo(0,0)\r\n        path.lineTo(1280,height)\r\n        path.lineTo(1280,0)\r\n        ctx.fill(path)\r\n\r\n\r\n        var path=new Path2D()\r\n        ctx.fillStyle=\"red\"\r\n        path.moveTo(0,720)\r\n        path.lineTo(1280,720)\r\n        path.lineTo(0,720-height)\r\n        path.lineTo(0,720)\r\n        ctx.fill(path)\r\n\r\n        ctx.fillStyle=\"white\"\r\n        ctx.font=\"60px Segoe UI\"\r\n\r\n\r\n        fitTextOnCanvas(this.state.title,\"fira sans\",15,690,480,ctx);\r\n\r\n\r\n\r\n\r\n        var width=250\r\n        ctx.drawImage(this.rtvLogo,950,20,width,(width*206)/878)\r\n    }\r\n\r\n\r\n\r\n\r\n    scrollHandler(event){\r\n        var extra=1.01\r\n        if(event.deltaY<0){\r\n            extra=0.99\r\n        }\r\n        this.imageInfo.width *=extra\r\n        this.imageInfo.height*=extra\r\n        this.draw()\r\n    }\r\n\r\n    moveButtonHandler(x,y){\r\n        var multiplyer=2\r\n        return((event)=>{\r\n            var interval=setInterval(()=>{\r\n            this.imageInfo.x-=x*multiplyer\r\n            this.imageInfo.y-=y*multiplyer\r\n            this.draw()\r\n            },50)\r\n            this.mouseDown.push(interval)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    scaleButtonHandler(plus){\r\n        return((event)=>{\r\n            var interval=setInterval(()=>\r\n                {\r\n                    console.log(\"scale\")\r\n                    var extra=1.01\r\n                    if(!plus){\r\n                        extra=0.99\r\n                    }\r\n                    this.imageInfo.width *=extra\r\n                    this.imageInfo.height*=extra\r\n                    this.draw()\r\n                },50)\r\n            this.mouseDown.push(interval)\r\n        })\r\n    }\r\n\r\n\r\n    mouseMoveEvent(event){\r\n       if(event.buttons===1){\r\n           if(this.mouseX!==null){\r\n               this.imageInfo.x-=this.mouseX-event.clientX\r\n               this.imageInfo.y-=this.mouseY-event.clientY\r\n               this.draw()\r\n           }\r\n               this.mouseX=event.clientX\r\n               this.mouseY=event.clientY\r\n       }else{\r\n           this.mouseX=null\r\n           this.mouseY=null\r\n       }\r\n    }\r\n\r\n\r\n    dowloaden(){\r\n        var canvas=this.inputRef.current\r\n        var link=document.createElement('a')\r\n        document.body.appendChild(link)\r\n        link.href=canvas.toDataURL()\r\n        link.download=`Banner '${this.state.title}'.png`\r\n        link.click()\r\n        document.body.removeChild(link)\r\n    }\r\n\r\n    clearAllInterVals(){\r\n        this.mouseDown.forEach(value => clearInterval(value))\r\n        this.mouseDown=[]\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ThumbnailPage\">\r\n                <header>\r\n                    <ol className=\"uitleg\">\r\n                        <li>Kopieër een Afbeelding en klik op \"Afbeelding van klembord\" of upload een Afbeelding door op de knop 'Bestand Kiezen' te klikken om een achtergrond toe te voegen.</li>\r\n                        <li>Gebruik de knoppen om de afbeelding aan te passen. Of sleep de afbeelding om hem te verplaatsen.</li>\r\n                        <li>Verander de tekst in het vakje \"Thumnail Tekst\" om een titel toe te voegen.</li>\r\n                        <li>Klik op \"Dowload Tumbnail\" om hem te dowloaden als afbeelding.</li>\r\n                    </ol>\r\n\r\n                    <div className=\"editFields\">\r\n                        <label>Thumbnail Text: <input className=\"titleInput\" type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange}/></label>\r\n                        <label>Kies Afbeelding: <input className=\"fileInput\" type=\"file\" name=\"imageShow\" value={this.state.image} onChange={this.handleInputChange}/></label>\r\n                        <label>Plak gekopieërde Afbeelding: <button onClick={this.imagePaste}> <i className=\"material-icons\" style={{fontSize:14}}>content_paste</i>  Afbeedling van klembord</button></label>\r\n                    </div>\r\n                    <div className=\"imageChanger\">\r\n                        <div className=\"imagePosition changeGroup\">\r\n                            <p>Verander Positie:</p>\r\n                            <div className=\"changeButtons\">\r\n                                <i className=\"material-icons\" onMouseDown={this.moveButtonHandler(0,1)} onMouseUp={this.clearAllInterVals} >keyboard_arrow_up</i>\r\n                                <i className=\"material-icons\" onMouseDown={this.moveButtonHandler(0,-1)} onMouseUp={this.clearAllInterVals} >keyboard_arrow_down</i>\r\n                                <i className=\"material-icons\" onMouseDown={this.moveButtonHandler(1,0)} onMouseUp={this.clearAllInterVals}  >keyboard_arrow_left</i>\r\n                                <i className=\"material-icons\" onMouseDown={this.moveButtonHandler(-1,0)} onMouseUp={this.clearAllInterVals}  >keyboard_arrow_right</i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"imageScale changeGroup\">\r\n                            <p>Verander Grootte:</p>\r\n                            <div className=\"changeButtons\">\r\n                                <i className=\"material-icons\"  onMouseDown={this.scaleButtonHandler(true) } onMouseUp={this.clearAllInterVals} >add</i>\r\n                                <i className=\"material-icons\"  onMouseDown={this.scaleButtonHandler(false)} onMouseUp={this.clearAllInterVals} >remove</i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <canvas  style={{border: '2px solid black'}} width=\"1280px\" height=\"720px\"   onMouseMove={this.mouseMoveEvent} ref={this.inputRef}></canvas>\r\n                <footer>\r\n                    <button onClick={this.dowloaden}><i className=\"material-icons\">get_app</i> Download Thumbnail</button>\r\n                </footer>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TumbnailCanvas","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport TumbnailCanvas from \"./TumbnailCanvas\";\n\nfunction App() {\n  return (\n        <TumbnailCanvas />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}